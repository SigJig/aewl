
start: (stmt | _TERM)*

?stmt: simple_stmt | compound_stmt
?simple_stmt: (property_def | variable_def) _TERM
?compound_stmt: widget_def | display_def | resource_def

widget_def: "widget" [ NAME ] inherits "{" suite "}"
resource_def: "resource" [ NAME ] inherits_opt "{" suite "}"
display_def: "display" [ NAME ] inherits_opt "{" suite "}"

inherits: "(" NAME ("," NAME)* [ "," ] ")"
?inherits_opt: [ inherits ]

suite: (simple_stmt)*
property_def: NAME "=" value_expr
variable_def: VARNAME "=" value_expr

?value_expr: mul_expr (_add_op mul_expr)*
?mul_expr: value (_mul_op value)*

!_add_op: "+" | "-"
!_mul_op: "*" | "/" | "%"

?value: "[" [ value_expr ("," value_expr)* [ "," ] ] "]" -> array
    |   widget_def
    |   VARNAME -> variable
    |   NAME -> property
    |   NUMBER "%" -> percentage
    |   NUMBER -> number
    |   ESCAPED_STRING -> string
    |   "(" value_expr ")"

VARNAME: /\$[a-zA-Z_]\w*/
NAME: /[a-zA-Z_]\w*/

_TERM: ";"
_NEWLINE: ( /\r?\n[\t ]*/ )+

%ignore CPP_COMMENT
%ignore C_COMMENT
%ignore WS
// %ignore /\\[\t \f]*\r?\n/

%import common (WS, WS_INLINE, NUMBER, ESCAPED_STRING, CPP_COMMENT, C_COMMENT)